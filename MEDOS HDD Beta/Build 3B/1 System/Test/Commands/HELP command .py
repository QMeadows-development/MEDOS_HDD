in1 = str
print ("Command testing")
print ("Opening command: HELP")
print ("Command type: Information display")
print ("Command size: 6455 bytes (6.30 Kilobytes)")
print ("Total lines of code used: 110")
print ("Command file format: .py (python file)")
print ("Location: Calculation Error!")
print ("Test the help command")
print ("Type 'help' to try out the command!")
in1 = str(input("FC://"))
if in1 == ("help"):
	print ("=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|")
	print ("Help list")
	print ("Command count:")
	print ("Editing commands: 3")
	print ("Navigation commands: 11")
	print ("Session commands: 6")
	print ("File & program commands: 4")
	print ("External media commands: 6")
	print ("System setting commands: 17")
	print ("Screensaver commands: 3")
	print ("Integer commands: 6")
	print ("Debug commands: 1")
	print ("Total command count: 58")
	print ("==========")
	print ("Editing")
	print ("DEL = Delete the selected file")
	print ("RENAME = Rename the selected file/directory")
	print ("URENAME = Undo the recent renaming action")
	print ("===========")
	print ("Navigation")
	print ("DIR = Directory")
	print ("HELP = Help guide")
	print ("RUN = Run a program/file")
	print ("CD = Choose a directory, type .. or the directory name afterwards, and you will go to the next directory")
	print ("COMPBLOG = View the file compatibility of the system")
	print ("PREVTOG = Toggle file previews")
	print ("USRDOC = Run the documentation center to view documentation on how to use the operating system")
	print ("UPINFBTA = Displays a log of update information for beta versions")
	print ("BGUIDE = Learn more about computer memory")
	print ("KBRDTEST = Test your keyboard through a selection of every standard keyboard")
	print ("DOSTOP = A functional desktop for your command line machine, a desktop of all ASCII characters, numbers, and letters")
	print ("============")
	print ("Session")
	print ("CLS = Clear screen")
	print ("COLOR = Change the text color of the terminal")
	print ("EXIT = Shut down the system")
	print ("UPDUSR2 = Check for updates for the network receiver device")
	print ("AUD# = Change the audio of the system, do NOT use an actual pound sign (#) instead, type a number 0-100")
	print ("REFRESH = Refresh the current directory AKA reload it")
	print ("=============")
	print ("Files and programs")
	print ("PLAY = Play the currently selected audio or video")
	print ("CALC = Run a calculator")
	print ("PYCON = Run the python console")
	print ("TASKMAN = Run the task management utility")
	print ("==============")
	print ("External media")
	print ("EJECT = Eject the system, make it ready for ejecting the drive")
	print ("FLOPSRCH = Search for floppy disks within an existing drive")
	print ("FORMAT = Format and delete all the files on this drive (WARNING: YOU CAN'T UNDO THIS!)")
	print ("MOUNT = Mount another device within your device (Floppy images, Cassette images, CD/DVD images")
	print ("PNP = Change plug n play settings")
	print ("FLOPDEVI = Shows the info for floppy drives")
	print ("==============")
	print ("System settings")
	print ("DISCON = Disconnect from the Internet, go offline")
	print ("NETW = Change the current network")
	print ("DRCHECK = Test your drives memory")
	print ("SPCHK = Calculate the amount of space being used")
	print ("VMOUTRUN = Use this command to launch programs OUTSIDE of the hard drive operating system, and onto the targeted receiver device")
	print ("VMORUTOG = Toggle launching programs outside of the hard drive operating systems to the other device on and off")
	print ("USR2 = change the settings for the receiver device")
	print ("9XRUN = Change compatibility settings for Windows 9x operating systems (Windows NT 4, Windows 95, Windows 98, Windows ME)")
	print ("XPRUN = Change compatibility settings for Windows XP and Server 2003")
	print ("3.RUN = Change the compatibility for Windows 3X based operating systems")
	print ("MASYSRUN = Change the compatibility settings for Mac System 1-9 operating systems")
	print ("MCXRUN = Change the compatibility settings for Mac OS X based operating systems")
	print ("UBURUN = Change the compatibility settings for Debian and Ubuntu based operating systems")
	print ("SRCVIEW = View the source of the system")
	print ("V7RUN = Change the compatibility settings for Windows Vista and Windows 7 operating systems")
	print ("IORUN = Change the compatibility settings for iOS operating systems")
	print ("ANDRORUN = Change the compatibility settings for Android operating systems")
	print ("==============")
	print ("Screensavers")
	print ("PINEFALL = A screensaver of an ASCII pine tree growing or shrinking, you choose")
	print ("7NATIONARMYBINARY = A screensaver of an entire song that was converted to binary that will scroll endlessly... or until you force-stop it")
	print ("PLATFORMERSSKY = A screensaver of a massive endless platform")
	print ("==============")
	print ("Integers")
	print ("INTCOMP = A compatibility log for integer testing, designed to list compatibility for 8, 16, 32, and 64 bit devices")
	print ("8BITEST1X = A command that counts from 0 to 256 by ones, the max value for an 8 bit integer, for stress testing purposes")
	print ("16BITEST1X = A command that counts from 0 to 65,536 by ones, the max value for an 16 bit integer, for stress testing purposes")
	print ("32BITEST1X = A command that counts from 0 to 2,147,483,647 by ones, the max value for an 32 bit integer, for stress testing purposes")
	print ("64BITEST1X = A command that counts from 0 to 9,223,372,036,854,775,807 by ones, the max value for an 64 bit integer, for stress testing purposes")
	print ("64BITEST1000X = A command that counts from 0 to 9,223,372,036,854,775,807, however it is counting by the thousand, and will not come to an exact number, which causes a future crash after several hours of runtime the max value for an 64 bit integer, for stress testing purposes")
	print ("==============")
	print ("Debugging")
	print ("SYSCRASH%7 = Run a manual crash on your system")
	print ("*****")
	print ("The command worked!")
print (in1)
testconfirm = int(input("Did the command info look right? type 1 to confirm, type anything else and/or press enter to quit "))
if testconfirm == 1:
    print ("Command testing successful")
    print ("Exiting command help center")
else:
    print ("Exiting command help center")
    